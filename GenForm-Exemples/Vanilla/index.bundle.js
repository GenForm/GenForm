(()=>{"use strict";class e{static validTypes=["button","checkbox","color","date","datetime-local","email","file","hidden","image","month","number","password","radio","range","reset","search","submit","tel","text","time","url","week"];static validAttributes=["accept","alt","autocapitalize","autocomplete","autofocus","capture","checked","dirname","disabled","form","formaction","formenctype","formmethod","formnovalidate","formtarget","height","list","max","maxlength","min","minlength","multiple","name","pattern","placeholder","popovertarget","popovertargetaction","readonly","required","size","src","step","type","value","width"];constructor(){}}e.toForm=function(t,r){try{(function(t){if(!t||0===Object.keys(t).length)throw new Error("Empty JSON");if(!t.elems)throw new Error('"elems" field is missing');if(!t.params||"object"!=typeof t.params)throw new Error('"params" field is missing');if(!t.params.action)throw new Error('"action" field in "params" is missing');for(const r of t.elems){if(!e.validTypes.includes(r.type))throw new Error("invalid type: "+r.type);for(const t in r)if(!e.validAttributes.includes(t))throw new Error("invalid attribute: "+t)}})(r),function(e){var t={},r=e.elems;for(let e=0;e<r.length;e++){if(void 0!==t[r[e].name])throw new Error("Duplicate name: "+r[e].name);t[r[e].name]=r[e].name}}(r)}catch(r){throw r.message="Error in GenForm, the JSON has: "+r.message,r}const a=t.createElement("form");return a.setAttribute("action",r.params.action),a.setAttribute("method",r.params.method),r.elems.forEach((function(e){var r=t.createElement("input"),i=Object.keys(e);for(const t in i)r.setAttribute(i[t],e[i[t]]);a.appendChild(r)})),a}})();