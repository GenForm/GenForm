name: Node.js Package building & publishing

on:
  push:
    branches:
      - t48-cicd

jobs:
  # Build and publish the package if the version is not already published
  build-publish-Core:
    runs-on: ubuntu-latest
    env:
      GITHUB_ENV: ./env-vars-publish.env
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: 'https://registry.npmjs.org/'
      - name: Check if the version is already published
        run: |
          currentVersion=$(node -p -e "require('./package.json').version")
          currentVersion_0=$(echo $currentVersion | cut -d'.' -f1)
          currentVersion_1=$(echo $currentVersion | cut -d'.' -f2)
          currentVersion_2=$(echo $currentVersion | cut -d'.' -f3)
          distantVersion=$(npm view @genform/core version)
          distantVersion_0=$(echo $distantVersion | cut -d'.' -f1)
          distantVersion_1=$(echo $distantVersion | cut -d'.' -f2)
          distantVersion_2=$(echo $distantVersion | cut -d'.' -f3)
          if [ "$currentVersion_0" < "$distantVersion_0" ]; then 
            echo "Version $currentVersion already published: 0"
          elif [ "$currentVersion_0" = "$distantVersion_0" ] && [ "$currentVersion_1" < "$distantVersion_1" ]; then
            echo "Version $currentVersion already published: 1"
          elif [ "$currentVersion_0" = "$distantVersion_0" ] && [ "$currentVersion_1" = "$distantVersion_1" ] && [ "$currentVersion_2" < "$distantVersion_2" ]; then
            echo "Version $currentVersion already published: 2"
          elif [ "$currentVersion = $distantVersion" ]; then
            echo "Version $currentVersion already published: 3"
          else
            echo "Version $currentVersion not published yet"
            echo "CORE_PUBLISHED=false" >> $GITHUB_ENV
          fi
        working-directory: GenForm-NPM/Core
      - name: Clean Install
        if: env.CORE_PUBLISHED == 'false'
        run: npm ci
        working-directory: GenForm-NPM/Core
      - name: Create Minified Version
        if: env.CORE_PUBLISHED == 'false'
        run: npm run minify
        working-directory: GenForm-NPM/Core
      # - name: Publish to NPM
      #   if: env.CORE_PUBLISHED == 'false'
      #   run: npm publish
      #   env:
      #     NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      #     NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      #     token: ${{ secrets.NPM_TOKEN }}
      #   working-directory: GenForm-NPM/Core

  build-publish-React:
    runs-on: ubuntu-latest
    env:
      GITHUB_ENV: ./env-vars-publish.env
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: 'https://registry.npmjs.org/'
      - name: Check if the version is already published
        run: |
          currentVersion=$(node -p -e "require('./package.json').version")
          distantVersion=$(npm view @genform/react version)
          if [ "$currentVersion" = "$distantVersion" ]; then
            echo "Version $currentVersion already published"
          else
            echo "Version $currentVersion not published yet"
            echo "REACT_PUBLISHED=false" >> $GITHUB_ENV
          fi
        working-directory: GenForm-NPM/React
      - name: Clean Install
        if: env.REACT_PUBLISHED == 'false'
        run: npm ci
        working-directory: GenForm-NPM/React
      # - name: Publish to NPM
      #   if: env.REACT_PUBLISHED == 'false'
      #   run: npm publish
      #   env:
      #     NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      #     NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      #     token: ${{ secrets.NPM_TOKEN }}
      #   working-directory: GenForm-NPM/React
