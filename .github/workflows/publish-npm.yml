name: Node.js Package building & publishing

on:
  push:
    branches:
      - t47-cicd

jobs:

  # Build and publish the package if the version is not already published
  build-publish-Core:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: 'https://registry.npmjs.org/'
      - name: Check if the version is already published
        run: |
          currentVersion=$(node -p -e "require('./package.json').version")
          distantVersion=$(npm view @genform/core version)
          if [ "$currentVersion" = "$distantVersion" ]; then
            echo "Version $currentVersion already published"
            CORE_PUBLISHED=$(true)
            echo "::set-env name=CORE_PUBLISHED::$CORE_PUBLISHED"
          else
            echo "Version $currentVersion not published yet"
            CORE_PUBLISHED=$(false)
            echo "::set-env name=CORE_PUBLISHED::$CORE_PUBLISHED"
          fi
        working-directory: GenForm-NPM/Core
      - name: Clean Install
        if: env.CORE_PUBLISHED == false
        run: npm ci
        working-directory: GenForm-NPM/Core
      - name: Create Minified Version
        if: env.CORE_PUBLISHED == false
        run: npm run minify
        working-directory: GenForm-NPM/Core
      - name: Publish to NPM
        if: env.CORE_PUBLISHED == false
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          token: ${{ secrets.NPM_TOKEN }}
        working-directory: GenForm-NPM/Core

  build-publish-React:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: 'https://registry.npmjs.org/'
      - name: Check if the version is already published
        run: |
          currentVersion=$(node -p -e "require('./package.json').version")
          distantVersion=$(npm view @genform/react version)
          if [ "$currentVersion" = "$distantVersion" ]; then
            echo "Version $currentVersion already published"
            REACT_PUBLISHED=$(true)
            echo "::set-env name=REACT_PUBLISHED::$REACT_PUBLISHED"
          else
            echo "Version $currentVersion not published yet"
            REACT_PUBLISHED=$(false)
            echo "::set-env name=REACT_PUBLISHED::$REACT_PUBLISHED"
          fi
        working-directory: GenForm-NPM/React
      - name: Clean Install
        run: npm ci
        working-directory: GenForm-NPM/React
      # - name: Create Minified Version
      #   run: npm run minify
      #   working-directory: GenForm-NPM/React
      - name: Publish to NPM
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          token: ${{ secrets.NPM_TOKEN }}
        working-directory: GenForm-NPM/React
