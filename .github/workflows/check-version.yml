name: Node.js Package version checking

on:
  pull_request:
    branches:
      - main

jobs:
  check-version-Core:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - uses: actions/setup-node@v4
        with:
          node-version: 16
      - name: check if Core version is already published
        run: |
          if [ -z "$(git diff --name-only -r HEAD^1 HEAD -- GenForm-NPM/Core)" ]; then
            echo "no changes in this package, skipping version check"
            exit 0
          fi
          cd ./GenForm-NPM/Core
          currentVersion=$(node -p -e "require('./package.json').version")
          currentVersion_0=$(echo $currentVersion | cut -d'.' -f1)
          currentVersion_1=$(echo $currentVersion | cut -d'.' -f2)
          currentVersion_2=$(echo $currentVersion | cut -d'.' -f3)
          distantVersion=$(npm view @genform/core version)
          distantVersion_0=$(echo $distantVersion | cut -d'.' -f1)
          distantVersion_1=$(echo $distantVersion | cut -d'.' -f2)
          distantVersion_2=$(echo $distantVersion | cut -d'.' -f3)
          if [ "$currentVersion_0" -lt "$distantVersion_0" ] || 
            ([ "$currentVersion_0" -eq "$distantVersion_0" ] && [ "$currentVersion_1" -lt "$distantVersion_1" ]) || 
            ([ "$currentVersion_0" -eq "$distantVersion_0" ] && [ "$currentVersion_1" -eq "$distantVersion_1" ] && [ "$currentVersion_2" -lt "$distantVersion_2" ]); then
            echo "Local version $currentVersion is lower than distant version"
            exit 1
          elif [ "$currentVersion" = "$distantVersion" ]; then
            echo "Version $currentVersion already published"
            exit 1
          else
            echo "Version $currentVersion not published yet"
          fi

  check-version-React:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - uses: actions/setup-node@v4
        with:
          node-version: 16
      - name: check if React version is already published
        run: |
          if [ -z "$(git diff --name-only -r HEAD^1 HEAD -- GenForm-NPM/React)" ]; then
            echo "no changes in this package, skipping version check"
            exit 0
          fi
          cd ./GenForm-NPM/React
          currentVersion=$(node -p -e "require('./package.json').version")
          currentVersion_0=$(echo $currentVersion | cut -d'.' -f1)
          currentVersion_1=$(echo $currentVersion | cut -d'.' -f2)
          currentVersion_2=$(echo $currentVersion | cut -d'.' -f3)
          distantVersion=$(npm view @genform/react version)
          distantVersion_0=$(echo $distantVersion | cut -d'.' -f1)
          distantVersion_1=$(echo $distantVersion | cut -d'.' -f2)
          distantVersion_2=$(echo $distantVersion | cut -d'.' -f3)
          if [ "$currentVersion_0" -lt "$distantVersion_0" ] || 
            ([ "$currentVersion_0" -eq "$distantVersion_0" ] && [ "$currentVersion_1" -lt "$distantVersion_1" ]) || 
            ([ "$currentVersion_0" -eq "$distantVersion_0" ] && [ "$currentVersion_1" -eq "$distantVersion_1" ] && [ "$currentVersion_2" -lt "$distantVersion_2" ]); then
            echo "Local version $currentVersion is lower than distant version"
            exit 1
          elif [ "$currentVersion" = "$distantVersion" ]; then
            echo "Version $currentVersion already published"
            exit 1
          else
            echo "Version $currentVersion not published yet"
          fi
